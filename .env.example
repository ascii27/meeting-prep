PORT=3000

# Google OAuth credentials for web application
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret

# Separate Google OAuth credentials for intelligence worker
# Use a Desktop application OAuth client type
WORKER_GOOGLE_CLIENT_ID=your_worker_client_id
WORKER_GOOGLE_CLIENT_SECRET=your_worker_client_secret
# The redirect URI will be automatically set to http://127.0.0.1:3000/oauth2callback

# Session
SESSION_SECRET=your_session_secret

# AI Service Configuration
AI_SERVICE=openai                # Options: 'openai' or 'litellm'

# OpenAI Configuration
OPENAI_API_KEY=your_openai_api_key
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=1000
OPENAI_TEMPERATURE=0.7

# LiteLLM Configuration
LLM_PROVIDER_DEFAULT=openai      # Default provider for LiteLLM
LITELLM_API_URL=http://localhost:8000  # Optional LiteLLM API URL (if using LiteLLM server)
LITELLM_API_KEY=your_litellm_api_key   # API key for authenticating with LiteLLM server
ANTHROPIC_API_KEY=your_anthropic_api_key_optional  # Only needed if using Anthropic models
LLM_TEMPERATURE=0.7
LLM_MAX_TOKENS=1000
LLM_FALLBACK_MODELS=["gpt-4","claude-2","gpt-3.5-turbo"]

# Database
DB_HOST=localhost
DB_PORT=5432
DB_NAME=meeting_prep
DB_USER=postgres
DB_PASSWORD=postgres

# Neo4j Graph Database
NEO4J_URI=neo4j://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=password
NEO4J_DATABASE=neo4j

# Application
NODE_ENV=development
PORT=3000
